{"ast":null,"code":"import _slicedToArray from \"/Users/luisfernandolins/ChernoStation/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luisfernandolins/ChernoStation/client/src/pages/login/Login.js\";\nimport React, { useState } from \"react\";\nimport { Grid, CircularProgress, Typography, Button, Tabs, Tab, TextField, Fade, Paper } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\"; // styles\n\nimport useStyles from \"./styles\"; // logo\n\nimport logo from \"./logo.svg\";\nimport google from \"../../images/google.svg\"; // context\n\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\n\nfunction Login(props) {\n  var classes = useStyles(); // global\n\n  var userDispatch = useUserDispatch(); // local\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      activeTabId = _useState6[0],\n      setActiveTabId = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      nameValue = _useState8[0],\n      setNameValue = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loginValue = _useState10[0],\n      setLoginValue = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      passwordValue = _useState12[0],\n      setPasswordValue = _useState12[1];\n\n  console.log(error);\n  console.log(isLoading);\n  return React.createElement(Grid, {\n    container: true,\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.logotypeContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    alt: \"logo\",\n    className: classes.logotypeImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    className: classes.logotypeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"ChernoStation\")), React.createElement(\"div\", {\n    className: classes.formContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: activeTabId,\n    onChange: (e, id) => setActiveTabId(id),\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Tab, {\n    label: \"Entrar\",\n    classes: {\n      root: classes.tab\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Tab, {\n    label: \"Cadastro\",\n    classes: {\n      root: classes.tab\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), activeTabId === 0 && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h1\",\n    className: classes.greeting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Bem-vindo de volta!\"), React.createElement(Fade, {\n    in: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"secondary\",\n    className: classes.errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"H\\xE1 algo errado com seu usu\\xE1rio ou senha :(\")), React.createElement(TextField, {\n    id: \"email\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: loginValue,\n    onChange: e => setLoginValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"E-mail\",\n    type: \"email\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"password\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: passwordValue,\n    onChange: e => setPasswordValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Senha\",\n    type: \"password\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.formButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, isLoading ? React.createElement(CircularProgress, {\n    size: 26,\n    className: classes.loginLoader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }) : React.createElement(Button, {\n    disabled: loginValue.length === 0 || passwordValue.length === 0,\n    onClick: () => loginUser(userDispatch, loginValue, passwordValue, props.history, setIsLoading, setError),\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Login\"), React.createElement(Button, {\n    color: \"primary\",\n    size: \"large\",\n    className: classes.forgetButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Forget Password\"))), activeTabId === 1 && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h1\",\n    className: classes.greeting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Welcome!\"), React.createElement(Typography, {\n    variant: \"h2\",\n    className: classes.subGreeting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Create your account\"), React.createElement(Fade, {\n    in: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"secondary\",\n    className: classes.errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Something is wrong with your login or password :(\")), React.createElement(TextField, {\n    id: \"name\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: nameValue,\n    onChange: e => setNameValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Full Name\",\n    type: \"email\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"email\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: loginValue,\n    onChange: e => setLoginValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Email Adress\",\n    type: \"email\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"password\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: passwordValue,\n    onChange: e => setPasswordValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Password\",\n    type: \"password\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.creatingButtonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, isLoading ? React.createElement(CircularProgress, {\n    size: 26,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }) : React.createElement(Button, {\n    onClick: () => loginUser(userDispatch, loginValue, passwordValue, props.history, setIsLoading, setError),\n    disabled: loginValue.length === 0 || passwordValue.length === 0 || nameValue.length === 0,\n    size: \"large\",\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    className: classes.createAccountButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, \"Create your account\"))))));\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["/Users/luisfernandolins/ChernoStation/client/src/pages/login/Login.js"],"names":["React","useState","Grid","CircularProgress","Typography","Button","Tabs","Tab","TextField","Fade","Paper","withRouter","classnames","useStyles","useUserDispatch","loginUser","Login","props","classes","userDispatch","isLoading","setIsLoading","error","setError","activeTabId","setActiveTabId","nameValue","setNameValue","loginValue","setLoginValue","passwordValue","setPasswordValue","console","log","container","logotypeContainer","logo","logotypeImage","logotypeText","formContainer","form","e","id","root","tab","greeting","errorMessage","underline","textFieldUnderline","input","textField","target","value","formButtons","loginLoader","length","history","forgetButton","subGreeting","creatingButtonContainer","createAccountButton"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Button,\n  Tabs,\n  Tab,\n  TextField,\n  Fade,\n  Paper,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// logo\nimport logo from \"./logo.svg\";\nimport google from \"../../images/google.svg\";\n\n// context\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\n\nfunction Login(props) {\n  var classes = useStyles();\n\n  // global\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [nameValue, setNameValue] = useState(\"\");\n  var [loginValue, setLoginValue] = useState(\"\");\n  var [passwordValue, setPasswordValue] = useState(\"\");\n  console.log(error);\n  console.log(isLoading);\n  return (\n    <Grid container className={classes.container}>\n      <div className={classes.logotypeContainer}>\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\n        <Typography className={classes.logotypeText}>ChernoStation</Typography>\n      </div>\n      <div className={classes.formContainer}>\n        <div className={classes.form}>\n          <Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"Entrar\" classes={{ root: classes.tab }} />\n            <Tab label=\"Cadastro\" classes={{ root: classes.tab }} />\n          </Tabs>\n          {activeTabId === 0 && (\n            <React.Fragment>\n              <Typography variant=\"h1\" className={classes.greeting}>\n                Bem-vindo de volta!\n              </Typography>\n              <Fade in={error}>\n                {/* <Paper> */}\n                  <Typography color=\"secondary\" className={classes.errorMessage}>\n                    Há algo errado com seu usuário ou senha :(\n                  </Typography>\n                {/* </Paper> */}\n              </Fade>\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"E-mail\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Senha\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.formButtons}>\n                {isLoading ? (\n                  <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                  <Button\n                    disabled={\n                      loginValue.length === 0 || passwordValue.length === 0\n                    }\n                    onClick={() =>\n                      loginUser(\n                        userDispatch,\n                        loginValue,\n                        passwordValue,\n                        props.history,\n                        setIsLoading,\n                        setError,\n                      )\n                    }\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                  >\n                    Login\n                  </Button>\n                )}\n                <Button\n                  color=\"primary\"\n                  size=\"large\"\n                  className={classes.forgetButton}\n                >\n                  Forget Password\n                </Button>\n              </div>\n            </React.Fragment>\n          )}\n          {activeTabId === 1 && (\n            <React.Fragment>\n              <Typography variant=\"h1\" className={classes.greeting}>\n                Welcome!\n              </Typography>\n              <Typography variant=\"h2\" className={classes.subGreeting}>\n                Create your account\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"name\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={nameValue}\n                onChange={e => setNameValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Full Name\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.creatingButtonContainer}>\n                {isLoading ? (\n                  <CircularProgress size={26} />\n                ) : (\n                  <Button\n                    onClick={() =>\n                      loginUser(\n                        userDispatch,\n                        loginValue,\n                        passwordValue,\n                        props.history,\n                        setIsLoading,\n                        setError,\n                      )\n                    }\n                    disabled={\n                      loginValue.length === 0 ||\n                      passwordValue.length === 0 ||\n                      nameValue.length === 0\n                    }\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    fullWidth\n                    className={classes.createAccountButton}\n                  >\n                    Create your account\n                  </Button>\n                )}\n              </div>\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n"]},"metadata":{},"sourceType":"module"}