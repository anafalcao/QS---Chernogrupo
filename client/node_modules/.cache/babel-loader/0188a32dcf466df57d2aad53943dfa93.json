{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\User\\\\QS-ChernoStation\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\QS-ChernoStation\\\\client\\\\src\\\\components\\\\Notification\\\\Notification.js\";\nimport React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { NotificationsNone as NotificationsIcon, ThumbUp as ThumbUpIcon, ShoppingCart as ShoppingCartIcon, LocalOffer as TicketIcon, BusinessCenter as DeliveredIcon, SmsFailed as FeedbackIcon, DiscFull as DiscIcon, Email as MessageIcon, Report as ReportIcon, Error as DefenceIcon, AccountBox as CustomerIcon, Done as ShippedIcon, Publish as UploadIcon } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport classnames from \"classnames\";\nimport tinycolor from \"tinycolor2\"; // styles\n\nimport useStyles from \"./styles\"; // components\n\nimport { Typography } from \"../Wrappers\";\nconst typesIcons = {\n  \"e-commerce\": React.createElement(ShoppingCartIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }),\n  notification: React.createElement(NotificationsIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }),\n  offer: React.createElement(TicketIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }),\n  info: React.createElement(ThumbUpIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }),\n  message: React.createElement(MessageIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }),\n  feedback: React.createElement(FeedbackIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }),\n  customer: React.createElement(CustomerIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }),\n  shipped: React.createElement(ShippedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }),\n  delivered: React.createElement(DeliveredIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }),\n  defence: React.createElement(DefenceIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }),\n  report: React.createElement(ReportIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }),\n  upload: React.createElement(UploadIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }),\n  disc: React.createElement(DiscIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })\n};\nexport default function Notification(_ref) {\n  let variant = _ref.variant,\n      props = _objectWithoutProperties(_ref, [\"variant\"]);\n\n  var classes = useStyles();\n  var theme = useTheme();\n  const icon = getIconByType(props.type);\n  const iconWithStyles = React.cloneElement(icon, {\n    classes: {\n      root: classes.notificationIcon\n    },\n    style: {\n      color: variant !== \"contained\" && theme.palette[props.color] && theme.palette[props.color].main\n    }\n  });\n  return React.createElement(\"div\", {\n    className: classnames(classes.notificationContainer, props.className, {\n      [classes.notificationContained]: variant === \"contained\",\n      [classes.notificationContainedShadowless]: props.shadowless\n    }),\n    style: {\n      backgroundColor: variant === \"contained\" && theme.palette[props.color] && theme.palette[props.color].main\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classnames(classes.notificationIconContainer, {\n      [classes.notificationIconContainerContained]: variant === \"contained\",\n      [classes.notificationIconContainerRounded]: variant === \"rounded\"\n    }),\n    style: {\n      backgroundColor: variant === \"rounded\" && theme.palette[props.color] && tinycolor(theme.palette[props.color].main).setAlpha(0.15).toRgbString()\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, iconWithStyles), React.createElement(\"div\", {\n    className: classes.messageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classnames({\n      [classes.containedTypography]: variant === \"contained\"\n    }),\n    variant: props.typographyVariant,\n    size: variant !== \"contained\" && !props.typographyVariant && \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, props.message), props.extraButton && props.extraButtonClick && React.createElement(Button, {\n    onClick: props.extraButtonClick,\n    disableRipple: true,\n    className: classes.extraButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, props.extraButton)));\n} // ####################################################################\n\nfunction getIconByType(type = \"offer\") {\n  return typesIcons[type];\n}","map":{"version":3,"sources":["C:\\Users\\User\\QS-ChernoStation\\client\\src\\components\\Notification\\Notification.js"],"names":["React","Button","NotificationsNone","NotificationsIcon","ThumbUp","ThumbUpIcon","ShoppingCart","ShoppingCartIcon","LocalOffer","TicketIcon","BusinessCenter","DeliveredIcon","SmsFailed","FeedbackIcon","DiscFull","DiscIcon","Email","MessageIcon","Report","ReportIcon","Error","DefenceIcon","AccountBox","CustomerIcon","Done","ShippedIcon","Publish","UploadIcon","useTheme","classnames","tinycolor","useStyles","Typography","typesIcons","notification","offer","info","message","feedback","customer","shipped","delivered","defence","report","upload","disc","Notification","variant","props","classes","theme","icon","getIconByType","type","iconWithStyles","cloneElement","root","notificationIcon","style","color","palette","main","notificationContainer","className","notificationContained","notificationContainedShadowless","shadowless","backgroundColor","notificationIconContainer","notificationIconContainerContained","notificationIconContainerRounded","setAlpha","toRgbString","messageContainer","containedTypography","typographyVariant","extraButton","extraButtonClick"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport {\r\n  NotificationsNone as NotificationsIcon,\r\n  ThumbUp as ThumbUpIcon,\r\n  ShoppingCart as ShoppingCartIcon,\r\n  LocalOffer as TicketIcon,\r\n  BusinessCenter as DeliveredIcon,\r\n  SmsFailed as FeedbackIcon,\r\n  DiscFull as DiscIcon,\r\n  Email as MessageIcon,\r\n  Report as ReportIcon,\r\n  Error as DefenceIcon,\r\n  AccountBox as CustomerIcon,\r\n  Done as ShippedIcon,\r\n  Publish as UploadIcon,\r\n} from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport classnames from \"classnames\";\r\nimport tinycolor from \"tinycolor2\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Typography } from \"../Wrappers\";\r\n\r\nconst typesIcons = {\r\n  \"e-commerce\": <ShoppingCartIcon />,\r\n  notification: <NotificationsIcon />,\r\n  offer: <TicketIcon />,\r\n  info: <ThumbUpIcon />,\r\n  message: <MessageIcon />,\r\n  feedback: <FeedbackIcon />,\r\n  customer: <CustomerIcon />,\r\n  shipped: <ShippedIcon />,\r\n  delivered: <DeliveredIcon />,\r\n  defence: <DefenceIcon />,\r\n  report: <ReportIcon />,\r\n  upload: <UploadIcon />,\r\n  disc: <DiscIcon />,\r\n};\r\n\r\nexport default function Notification({ variant, ...props }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  const icon = getIconByType(props.type);\r\n  const iconWithStyles = React.cloneElement(icon, {\r\n    classes: {\r\n      root: classes.notificationIcon,\r\n    },\r\n    style: {\r\n      color:\r\n        variant !== \"contained\" &&\r\n        theme.palette[props.color] &&\r\n        theme.palette[props.color].main,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={classnames(classes.notificationContainer, props.className, {\r\n        [classes.notificationContained]: variant === \"contained\",\r\n        [classes.notificationContainedShadowless]: props.shadowless,\r\n      })}\r\n      style={{\r\n        backgroundColor:\r\n          variant === \"contained\" &&\r\n          theme.palette[props.color] &&\r\n          theme.palette[props.color].main,\r\n      }}\r\n    >\r\n      <div\r\n        className={classnames(classes.notificationIconContainer, {\r\n          [classes.notificationIconContainerContained]: variant === \"contained\",\r\n          [classes.notificationIconContainerRounded]: variant === \"rounded\",\r\n        })}\r\n        style={{\r\n          backgroundColor:\r\n            variant === \"rounded\" &&\r\n            theme.palette[props.color] &&\r\n            tinycolor(theme.palette[props.color].main)\r\n              .setAlpha(0.15)\r\n              .toRgbString(),\r\n        }}\r\n      >\r\n        {iconWithStyles}\r\n      </div>\r\n      <div className={classes.messageContainer}>\r\n        <Typography\r\n          className={classnames({\r\n            [classes.containedTypography]: variant === \"contained\",\r\n          })}\r\n          variant={props.typographyVariant}\r\n          size={variant !== \"contained\" && !props.typographyVariant && \"md\"}\r\n        >\r\n          {props.message}\r\n        </Typography>\r\n        {props.extraButton && props.extraButtonClick && (\r\n          <Button\r\n            onClick={props.extraButtonClick}\r\n            disableRipple\r\n            className={classes.extraButton}\r\n          >\r\n            {props.extraButton}\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// ####################################################################\r\nfunction getIconByType(type = \"offer\") {\r\n  return typesIcons[type];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}