{"ast":null,"code":"import _slicedToArray from \"/Users/luisfernandolins/ChernoStation/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luisfernandolins/ChernoStation/client/src/components/Sidebar/Sidebar.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\nimport { Home as HomeIcon, NotificationsNone as NotificationsIcon, FormatSize as TypographyIcon, FilterNone as UIElementsIcon, BorderAll as TableIcon, QuestionAnswer as SupportIcon, LibraryBooks as LibraryIcon, HelpOutline as FAQIcon, ArrowBack as ArrowBackIcon } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\"; // styles\n\nimport useStyles from \"./styles\"; // components\n\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\nimport Dot from \"./components/Dot\"; // context\n\nimport { useLayoutState, useLayoutDispatch, toggleSidebar } from \"../../context/LayoutContext\";\nconst structure = [{\n  id: 0,\n  label: \"Dashboard\",\n  link: \"/app/dashboard\",\n  icon: React.createElement(HomeIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })\n}, // {\n//   id: 1,\n//   label: \"Typography\",\n//   link: \"/app/typography\",\n//   icon: <TypographyIcon />,\n// },\n// { id: 2, label: \"Tables\", link: \"/app/tables\", icon: <TableIcon /> },\n// {\n//   id: 3,\n//   label: \"Notifications\",\n//   link: \"/app/notifications\",\n//   icon: <NotificationsIcon />,\n// },\n// {\n//   id: 4,\n//   label: \"UI Elements\",\n//   link: \"/app/ui\",\n//   icon: <UIElementsIcon />,\n//   children: [\n//     { label: \"Icons\", link: \"/app/ui/icons\" },\n//     { label: \"Charts\", link: \"/app/ui/charts\" },\n//     { label: \"Maps\", link: \"/app/ui/maps\" },\n//   ],\n// },\n{\n  id: 5,\n  type: \"divider\"\n}, {\n  id: 6,\n  type: \"title\",\n  label: \"HELP\"\n}, {\n  id: 7,\n  label: \"Library\",\n  link: \"\",\n  icon: React.createElement(LibraryIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })\n}, {\n  id: 8,\n  label: \"Support\",\n  link: \"\",\n  icon: React.createElement(SupportIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })\n}, {\n  id: 9,\n  label: \"FAQ\",\n  link: \"\",\n  icon: React.createElement(FAQIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })\n}];\n\nfunction Sidebar({\n  location\n}) {\n  var classes = useStyles();\n  var theme = useTheme(); // global\n\n  var _useLayoutState = useLayoutState(),\n      isSidebarOpened = _useLayoutState.isSidebarOpened;\n\n  var layoutDispatch = useLayoutDispatch(); // local\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isPermanent = _useState2[0],\n      setPermanent = _useState2[1];\n\n  useEffect(function () {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n  return React.createElement(Drawer, {\n    variant: isPermanent ? \"permanent\" : \"temporary\",\n    className: classNames(classes.drawer, {\n      [classes.drawerOpen]: isSidebarOpened,\n      [classes.drawerClose]: !isSidebarOpened\n    }),\n    classes: {\n      paper: classNames({\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened\n      })\n    },\n    open: isSidebarOpened,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.mobileBackButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: () => toggleSidebar(layoutDispatch),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(ArrowBackIcon, {\n    classes: {\n      root: classNames(classes.headerIcon, classes.headerIconCollapse)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }))), React.createElement(List, {\n    className: classes.sidebarList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, structure.map(link => React.createElement(SidebarLink, Object.assign({\n    key: link.id,\n    location: location,\n    isSidebarOpened: isSidebarOpened\n  }, link, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }))))); // ##################################################################\n\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);","map":{"version":3,"sources":["/Users/luisfernandolins/ChernoStation/client/src/components/Sidebar/Sidebar.js"],"names":["React","useState","useEffect","Drawer","IconButton","List","Home","HomeIcon","NotificationsNone","NotificationsIcon","FormatSize","TypographyIcon","FilterNone","UIElementsIcon","BorderAll","TableIcon","QuestionAnswer","SupportIcon","LibraryBooks","LibraryIcon","HelpOutline","FAQIcon","ArrowBack","ArrowBackIcon","useTheme","withRouter","classNames","useStyles","SidebarLink","Dot","useLayoutState","useLayoutDispatch","toggleSidebar","structure","id","label","link","icon","type","Sidebar","location","classes","theme","isSidebarOpened","layoutDispatch","isPermanent","setPermanent","window","addEventListener","handleWindowWidthChange","cleanup","removeEventListener","drawer","drawerOpen","drawerClose","paper","toolbar","mobileBackButton","root","headerIcon","headerIconCollapse","sidebarList","map","windowWidth","innerWidth","breakpointWidth","breakpoints","values","md","isSmallScreen"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\nimport {\n  Home as HomeIcon,\n  NotificationsNone as NotificationsIcon,\n  FormatSize as TypographyIcon,\n  FilterNone as UIElementsIcon,\n  BorderAll as TableIcon,\n  QuestionAnswer as SupportIcon,\n  LibraryBooks as LibraryIcon,\n  HelpOutline as FAQIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\nimport Dot from \"./components/Dot\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\n\nconst structure = [\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\n  // {\n  //   id: 1,\n  //   label: \"Typography\",\n  //   link: \"/app/typography\",\n  //   icon: <TypographyIcon />,\n  // },\n  // { id: 2, label: \"Tables\", link: \"/app/tables\", icon: <TableIcon /> },\n  // {\n  //   id: 3,\n  //   label: \"Notifications\",\n  //   link: \"/app/notifications\",\n  //   icon: <NotificationsIcon />,\n  // },\n  // {\n  //   id: 4,\n  //   label: \"UI Elements\",\n  //   link: \"/app/ui\",\n  //   icon: <UIElementsIcon />,\n  //   children: [\n  //     { label: \"Icons\", link: \"/app/ui/icons\" },\n  //     { label: \"Charts\", link: \"/app/ui/charts\" },\n  //     { label: \"Maps\", link: \"/app/ui/maps\" },\n  //   ],\n  // },\n  { id: 5, type: \"divider\" },\n  { id: 6, type: \"title\", label: \"HELP\" },\n  { id: 7, label: \"Library\", link: \"\", icon: <LibraryIcon /> },\n  { id: 8, label: \"Support\", link: \"\", icon: <SupportIcon /> },\n  { id: 9, label: \"FAQ\", link: \"\", icon: <FAQIcon /> },\n  // { id: 10, type: \"divider\" },\n  // { id: 11, type: \"title\", label: \"PROJECTS\" },\n  // {\n  //   id: 12,\n  //   label: \"My recent\",\n  //   link: \"\",\n  //   icon: <Dot size=\"large\" color=\"warning\" />,\n  // },\n  // {\n  //   id: 13,\n  //   label: \"Starred\",\n  //   link: \"\",\n  //   icon: <Dot size=\"large\" color=\"primary\" />,\n  // },\n  // {\n  //   id: 14,\n  //   label: \"Background\",\n  //   link: \"\",\n  //   icon: <Dot size=\"large\" color=\"secondary\" />,\n  // },\n];\n\nfunction Sidebar({ location }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n\n  // local\n  var [isPermanent, setPermanent] = useState(true);\n\n  useEffect(function() {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened,\n      })}\n      classes={{\n        paper: classNames({\n          [classes.drawerOpen]: isSidebarOpened,\n          [classes.drawerClose]: !isSidebarOpened,\n        }),\n      }}\n      open={isSidebarOpened}\n    >\n      <div className={classes.toolbar} />\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <List className={classes.sidebarList}>\n        {structure.map(link => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={isSidebarOpened}\n            {...link}\n          />\n        ))}\n      </List>\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);\n"]},"metadata":{},"sourceType":"module"}