{"ast":null,"code":"import _slicedToArray from \"/Users/luisfernandolins/ChernoStation/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luisfernandolins/ChernoStation/client/src/pages/dashboard/Dashboard.js\";\nimport React, { useState } from \"react\";\nimport { Grid, LinearProgress, Select, OutlinedInput, MenuItem } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { ResponsiveContainer, ComposedChart, AreaChart, LineChart, Line, Area, PieChart, Pie, Cell, YAxis, XAxis } from \"recharts\"; // styles\n\nimport useStyles from \"./styles\"; // components\n\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget\";\nimport PageTitle from \"../../components/PageTitle\";\nimport { Typography } from \"../../components/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\nconst mainChartData = getMainChartData();\nconst PieChartData = [{\n  name: \"Group A\",\n  value: 400,\n  color: \"primary\"\n}, {\n  name: \"Group B\",\n  value: 300,\n  color: \"secondary\"\n}, {\n  name: \"Group C\",\n  value: 300,\n  color: \"warning\"\n}, {\n  name: \"Group D\",\n  value: 200,\n  color: \"success\"\n}];\nexport default function Dashboard(props) {\n  var classes = useStyles();\n  var theme = useTheme(); // local\n\n  var _useState = useState(\"monthly\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      mainChartState = _useState2[0],\n      setMainChartState = _useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(PageTitle, {\n    title: \"Dashboard\",\n    button: \"Latest Reports\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 8,\n    sm: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    title: \"App Performance\",\n    upperTitle: true,\n    className: classes.card,\n    bodyClass: classes.fullHeightBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.performanceLegendWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.legendElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Dot, {\n    color: \"warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.legendElementText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Integration\")), React.createElement(\"div\", {\n    className: classes.legendElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Dot, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.legendElementText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"SDK\"))), React.createElement(\"div\", {\n    className: classes.progressSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    size: \"md\",\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.progressSectionTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Integration\"), React.createElement(LinearProgress, {\n    variant: \"determinate\",\n    value: 30,\n    classes: {\n      barColorPrimary: classes.progressBar\n    },\n    className: classes.progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    size: \"md\",\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.progressSectionTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"SDK\"), React.createElement(LinearProgress, {\n    variant: \"determinate\",\n    value: 55,\n    classes: {\n      barColorPrimary: classes.progressBar\n    },\n    className: classes.progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 8,\n    sm: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    title: \"Server Overview\",\n    upperTitle: true,\n    className: classes.card,\n    bodyClass: classes.fullHeightBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.serverOverviewElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.serverOverviewElementText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"60% / 37\\xB0\\u0421 / 3.3 Ghz\"), React.createElement(\"div\", {\n    className: classes.serverOverviewElementChartWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    height: 50,\n    width: \"99%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(AreaChart, {\n    data: getRandomData(10),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Area, {\n    type: \"natural\",\n    dataKey: \"value\",\n    stroke: theme.palette.secondary.main,\n    fill: theme.palette.secondary.light,\n    strokeWidth: 2,\n    fillOpacity: \"0.25\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: classes.serverOverviewElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.serverOverviewElementText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"54% / 31\\xB0\\u0421 / 3.3 Ghz\"), React.createElement(\"div\", {\n    className: classes.serverOverviewElementChartWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    height: 50,\n    width: \"99%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(AreaChart, {\n    data: getRandomData(10),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(Area, {\n    type: \"natural\",\n    dataKey: \"value\",\n    stroke: theme.palette.primary.main,\n    fill: theme.palette.primary.light,\n    strokeWidth: 2,\n    fillOpacity: \"0.25\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: classes.serverOverviewElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.serverOverviewElementText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"57% / 21\\xB0\\u0421 / 3.3 Ghz\"), React.createElement(\"div\", {\n    className: classes.serverOverviewElementChartWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    height: 50,\n    width: \"99%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(AreaChart, {\n    data: getRandomData(10),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(Area, {\n    type: \"natural\",\n    dataKey: \"value\",\n    stroke: theme.palette.warning.main,\n    fill: theme.palette.warning.light,\n    strokeWidth: 2,\n    fillOpacity: \"0.25\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }))))))), React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 4,\n    sm: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    title: \"Revenue Breakdown\",\n    upperTitle: true,\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 144,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(PieChart, {\n    margin: {\n      left: theme.spacing(2)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(Pie, {\n    data: PieChartData,\n    innerRadius: 45,\n    outerRadius: 60,\n    dataKey: \"value\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, PieChartData.map((entry, index) => React.createElement(Cell, {\n    key: \"cell-\".concat(index),\n    fill: theme.palette[entry.color].main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  })))))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.pieChartLegendWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, PieChartData.map(({\n    name,\n    value,\n    color\n  }, index) => React.createElement(\"div\", {\n    key: color,\n    className: classes.legendItemContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(Dot, {\n    color: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    style: {\n      whiteSpace: \"nowrap\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"\\xA0\", name, \"\\xA0\"), React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, \"\\xA0\", value)))))))), mock.bigStat.map(stat => React.createElement(Grid, {\n    item: true,\n    md: 4,\n    sm: 6,\n    xs: 12,\n    key: stat.product,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(BigStat, Object.assign({}, stat, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    bodyClass: classes.mainChartBody,\n    header: React.createElement(\"div\", {\n      className: classes.mainChartHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"text\",\n      colorBrightness: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Daily Line Chart\"), React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabels,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(Dot, {\n      color: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Tablet\")), React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Dot, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"Mobile\")), React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(Dot, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Desktop\"))), React.createElement(Select, {\n      value: mainChartState,\n      onChange: e => setMainChartState(e.target.value),\n      input: React.createElement(OutlinedInput, {\n        labelWidth: 0,\n        classes: {\n          notchedOutline: classes.mainChartSelectRoot,\n          input: classes.mainChartSelect\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }),\n      autoWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"daily\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Daily\"), React.createElement(MenuItem, {\n      value: \"weekly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"Weekly\"), React.createElement(MenuItem, {\n      value: \"monthly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"Monthly\"))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    minWidth: 500,\n    height: 350,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, React.createElement(ComposedChart, {\n    margin: {\n      top: 0,\n      right: -15,\n      left: -15,\n      bottom: 0\n    },\n    data: mainChartData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, React.createElement(YAxis, {\n    ticks: [0, 2500, 5000, 7500],\n    tick: {\n      fill: theme.palette.text.hint + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.hint + \"80\",\n    tickLine: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    tickFormatter: i => i + 1,\n    tick: {\n      fill: theme.palette.text.hint + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.hint + \"80\",\n    tickLine: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }), React.createElement(Area, {\n    type: \"natural\",\n    dataKey: \"desktop\",\n    fill: theme.palette.background.light,\n    strokeWidth: 0,\n    activeDot: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }), React.createElement(Line, {\n    type: \"natural\",\n    dataKey: \"mobile\",\n    stroke: theme.palette.primary.main,\n    strokeWidth: 2,\n    dot: false,\n    activeDot: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }), React.createElement(Line, {\n    type: \"linear\",\n    dataKey: \"tablet\",\n    stroke: theme.palette.warning.main,\n    strokeWidth: 2,\n    dot: {\n      stroke: theme.palette.warning.dark,\n      strokeWidth: 2,\n      fill: theme.palette.warning.main\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }))))), mock.bigStat.map(stat => React.createElement(Grid, {\n    item: true,\n    md: 4,\n    sm: 6,\n    xs: 12,\n    key: stat.product,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }, React.createElement(BigStat, Object.assign({}, stat, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    title: \"Support Requests\",\n    upperTitle: true,\n    noBodyPadding: true,\n    bodyClass: classes.tableWidget,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347\n    },\n    __self: this\n  }, React.createElement(Table, {\n    data: mock.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  })))));\n} // #######################################################################\n\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (randomValue <= min || randomValue >= max || lastValue && randomValue - lastValue > maxDiff) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n    return {\n      value: randomValue\n    };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n\n  for (let i = 0; i < tablet.length; i++) {\n    resultArray.push({\n      tablet: tablet[i].value,\n      desktop: desktop[i].value,\n      mobile: mobile[i].value\n    });\n  }\n\n  return resultArray;\n}","map":{"version":3,"sources":["/Users/luisfernandolins/ChernoStation/client/src/pages/dashboard/Dashboard.js"],"names":["React","useState","Grid","LinearProgress","Select","OutlinedInput","MenuItem","useTheme","ResponsiveContainer","ComposedChart","AreaChart","LineChart","Line","Area","PieChart","Pie","Cell","YAxis","XAxis","useStyles","mock","Widget","PageTitle","Typography","Dot","Table","BigStat","mainChartData","getMainChartData","PieChartData","name","value","color","Dashboard","props","classes","theme","mainChartState","setMainChartState","card","fullHeightBody","performanceLegendWrapper","legendElement","legendElementText","progressSection","progressSectionTitle","barColorPrimary","progressBar","progress","serverOverviewElement","serverOverviewElementText","serverOverviewElementChartWrapper","getRandomData","palette","secondary","main","light","primary","warning","left","spacing","map","entry","index","pieChartLegendWrapper","legendItemContainer","whiteSpace","bigStat","stat","product","mainChartBody","mainChartHeader","mainChartHeaderLabels","mainChartHeaderLabel","mainChartLegentElement","e","target","notchedOutline","mainChartSelectRoot","input","mainChartSelect","top","right","bottom","fill","text","hint","fontSize","i","background","stroke","dark","strokeWidth","tableWidget","table","length","min","max","multiplier","maxDiff","array","Array","lastValue","item","randomValue","Math","floor","random","resultArray","tablet","desktop","mobile","push"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Grid,\n  LinearProgress,\n  Select,\n  OutlinedInput,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  AreaChart,\n  LineChart,\n  Line,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n  YAxis,\n  XAxis,\n} from \"recharts\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget\";\nimport PageTitle from \"../../components/PageTitle\";\nimport { Typography } from \"../../components/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\n\nconst mainChartData = getMainChartData();\nconst PieChartData = [\n  { name: \"Group A\", value: 400, color: \"primary\" },\n  { name: \"Group B\", value: 300, color: \"secondary\" },\n  { name: \"Group C\", value: 300, color: \"warning\" },\n  { name: \"Group D\", value: 200, color: \"success\" },\n];\n\nexport default function Dashboard(props) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // local\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\n\n  return (\n    <>\n      <PageTitle title=\"Dashboard\" button=\"Latest Reports\" />\n      <Grid container spacing={4}>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"App Performance\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.performanceLegendWrapper}>\n              <div className={classes.legendElement}>\n                <Dot color=\"warning\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  Integration\n                </Typography>\n              </div>\n              <div className={classes.legendElement}>\n                <Dot color=\"primary\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  SDK\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.progressSection}>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                Integration\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={30}\n                classes={{ barColorPrimary: classes.progressBar }}\n                className={classes.progress}\n              />\n            </div>\n            <div>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                SDK\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={55}\n                classes={{ barColorPrimary: classes.progressBar }}\n                className={classes.progress}\n              />\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"Server Overview\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n              >\n                60% / 37°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.secondary.main}\n                      fill={theme.palette.secondary.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n              >\n                54% / 31°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.primary.main}\n                      fill={theme.palette.primary.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n              >\n                57% / 21°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.warning.main}\n                      fill={theme.palette.warning.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget title=\"Revenue Breakdown\" upperTitle className={classes.card}>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <ResponsiveContainer width=\"100%\" height={144}>\n                  <PieChart margin={{ left: theme.spacing(2) }}>\n                    <Pie\n                      data={PieChartData}\n                      innerRadius={45}\n                      outerRadius={60}\n                      dataKey=\"value\"\n                    >\n                      {PieChartData.map((entry, index) => (\n                        <Cell\n                          key={`cell-${index}`}\n                          fill={theme.palette[entry.color].main}\n                        />\n                      ))}\n                    </Pie>\n                  </PieChart>\n                </ResponsiveContainer>\n              </Grid>\n              <Grid item xs={6}>\n                <div className={classes.pieChartLegendWrapper}>\n                  {PieChartData.map(({ name, value, color }, index) => (\n                    <div key={color} className={classes.legendItemContainer}>\n                      <Dot color={color} />\n                      <Typography style={{ whiteSpace: \"nowrap\" }}>\n                        &nbsp;{name}&nbsp;\n                      </Typography>\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\n                        &nbsp;{value}\n                      </Typography>\n                    </div>\n                  ))}\n                </div>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        {mock.bigStat.map(stat => (\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\n            <BigStat {...stat} />\n          </Grid>\n        ))}\n        <Grid item xs={12}>\n          <Widget\n            bodyClass={classes.mainChartBody}\n            header={\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  Daily Line Chart\n                </Typography>\n                <div className={classes.mainChartHeaderLabels}>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"warning\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Tablet\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Mobile\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Desktop\n                    </Typography>\n                  </div>\n                </div>\n                <Select\n                  value={mainChartState}\n                  onChange={e => setMainChartState(e.target.value)}\n                  input={\n                    <OutlinedInput\n                      labelWidth={0}\n                      classes={{\n                        notchedOutline: classes.mainChartSelectRoot,\n                        input: classes.mainChartSelect,\n                      }}\n                    />\n                  }\n                  autoWidth\n                >\n                  <MenuItem value=\"daily\">Daily</MenuItem>\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\n                </Select>\n              </div>\n            }\n          >\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n              <ComposedChart\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n                data={mainChartData}\n              >\n                <YAxis\n                  ticks={[0, 2500, 5000, 7500]}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <XAxis\n                  tickFormatter={i => i + 1}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <Area\n                  type=\"natural\"\n                  dataKey=\"desktop\"\n                  fill={theme.palette.background.light}\n                  strokeWidth={0}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"natural\"\n                  dataKey=\"mobile\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={false}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"linear\"\n                  dataKey=\"tablet\"\n                  stroke={theme.palette.warning.main}\n                  strokeWidth={2}\n                  dot={{\n                    stroke: theme.palette.warning.dark,\n                    strokeWidth: 2,\n                    fill: theme.palette.warning.main,\n                  }}\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </Widget>\n        </Grid>\n        {mock.bigStat.map(stat => (\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\n            <BigStat {...stat} />\n          </Grid>\n        ))}\n        <Grid item xs={12}>\n          <Widget\n            title=\"Support Requests\"\n            upperTitle\n            noBodyPadding\n            bodyClass={classes.tableWidget}\n          >\n            <Table data={mock.table} />\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n// #######################################################################\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (\n      randomValue <= min ||\n      randomValue >= max ||\n      (lastValue && randomValue - lastValue > maxDiff)\n    ) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n\n    return { value: randomValue };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n\n  for (let i = 0; i < tablet.length; i++) {\n    resultArray.push({\n      tablet: tablet[i].value,\n      desktop: desktop[i].value,\n      mobile: mobile[i].value,\n    });\n  }\n\n  return resultArray;\n}\n"]},"metadata":{},"sourceType":"module"}