{"ast":null,"code":"import _objectSpread from \"/Users/luisfernandolins/ChernoStation/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/luisfernandolins/ChernoStation/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luisfernandolins/ChernoStation/client/src/pages/dashboard/Dashboard.js\";\nimport React, { useState } from \"react\";\nimport { Grid, LinearProgress, Select, OutlinedInput, MenuItem, TextField, InputLabel, FormHelperText, FormControl } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { ResponsiveContainer, ComposedChart, AreaChart, LineChart, Line, Area, PieChart, Pie, Cell, YAxis, XAxis } from \"recharts\"; // styles\n\nimport useStyles from \"./styles\"; // components\n\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget\";\nimport PageTitle from \"../../components/PageTitle\";\nimport { Typography } from \"../../components/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\nconst mainChartData = getMainChartData();\nconst PieChartData = [{\n  name: \"Group A\",\n  value: 400,\n  color: \"primary\"\n}, {\n  name: \"Group B\",\n  value: 300,\n  color: \"secondary\"\n}, {\n  name: \"Group C\",\n  value: 300,\n  color: \"warning\"\n}, {\n  name: \"Group D\",\n  value: 200,\n  color: \"success\"\n}];\nexport default function Dashboard(props) {\n  var classes = useStyles();\n  var theme = useTheme(); // local\n\n  var _useState = useState(\"monthly\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      mainChartState = _useState2[0],\n      setMainChartState = _useState2[1]; // form props\n\n\n  const _React$useState = React.useState({\n    age: '',\n    name: 'hai'\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        values = _React$useState2[0],\n        setValues = _React$useState2[1];\n\n  const inputLabel = React.useRef(null);\n\n  const _React$useState3 = React.useState(0),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        labelWidth = _React$useState4[0],\n        setLabelWidth = _React$useState4[1]; // React.useEffect(() => {\n  //   setLabelWidth(inputLabel.current.offsetWidth);\n  // }, []);\n\n\n  const handleChange = event => {\n    setValues(oldValues => _objectSpread({}, oldValues, {\n      [event.target.name]: event.target.value\n    }));\n  }; //\n\n\n  return React.createElement(React.Fragment, null, React.createElement(PageTitle, {\n    title: \"Dashboard\",\n    button: \"Latest Reports\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, mock.bigStat.map(stat => React.createElement(Grid, {\n    item: true,\n    md: 4,\n    sm: 6,\n    xs: 12,\n    key: stat.product,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(BigStat, Object.assign({}, stat, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    method: \"GET\",\n    action: \"controller\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"nomeDoTratadorDePagina\",\n    value: \"mvc.pagehandlers.Tratador_pagina2_jsp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"form\",\n    value: \"form1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    className: classes.mainFormBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: classes.mainFormItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"age-auto-width\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, \"Age\"), React.createElement(Select, {\n    value: values.age,\n    onChange: handleChange,\n    inputProps: {\n      name: 'age',\n      id: 'age-auto-width'\n    },\n    autoWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, \"None\")), React.createElement(MenuItem, {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(MenuItem, {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(MenuItem, {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, \"Thirty\")), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, \"Auto width\"))), React.createElement(\"td\", {\n    id: \"datafinal\",\n    className: classes.mainFormItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"date\",\n    label: \"Data final a ser exibida\",\n    type: \"date\",\n    defaultValue: \"2017-05-24\",\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    className: classes.mainFormItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }, \"Per\\xEDodo:\", React.createElement(\"select\", {\n    name: \"periodo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, \"Ano\"), React.createElement(\"option\", {\n    value: \"month\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }, \"M\\xEAs\"), React.createElement(\"option\", {\n    value: \"week\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, \"Semana\"), React.createElement(\"option\", {\n    value: \"day\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }, \"Dia\"))), React.createElement(\"td\", {\n    className: classes.mainFormItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"Radio\",\n    name: \"datatype\",\n    value: \"table\",\n    checked: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }), \"Tabela\", React.createElement(\"input\", {\n    type: \"Radio\",\n    name: \"datatype\",\n    value: \"graphics\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }), \"Gr\\xE1fico\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"button\",\n    value: \"EXIBIR\",\n    onclick: \"fazerPedidoAJAXMedidas(datetime,medidor,periodo)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"button\",\n    value: \"EDITAR MEDIDORES\",\n    onclick: \"fazerPedidoAJAXMedidores()\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    bodyClass: classes.mainChartBody,\n    header: React.createElement(\"div\", {\n      className: classes.mainChartHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"text\",\n      colorBrightness: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, \"Gr\\xE1fico\"), React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabels,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(Dot, {\n      color: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"Tablet\")), React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(Dot, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, \"Mobile\")), React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(Dot, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"Desktop\"))), React.createElement(Select, {\n      value: mainChartState,\n      onChange: e => setMainChartState(e.target.value),\n      input: React.createElement(OutlinedInput, {\n        labelWidth: 0,\n        classes: {\n          notchedOutline: classes.mainChartSelectRoot,\n          input: classes.mainChartSelect\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }),\n      autoWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"daily\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, \"Daily\"), React.createElement(MenuItem, {\n      value: \"weekly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, \"Weekly\"), React.createElement(MenuItem, {\n      value: \"monthly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, \"Monthly\"))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    minWidth: 500,\n    height: 350,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  }, React.createElement(ComposedChart, {\n    margin: {\n      top: 0,\n      right: -15,\n      left: -15,\n      bottom: 0\n    },\n    data: mainChartData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389\n    },\n    __self: this\n  }, React.createElement(YAxis, {\n    ticks: [0, 2500, 5000, 7500],\n    tick: {\n      fill: theme.palette.text.hint + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.hint + \"80\",\n    tickLine: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    tickFormatter: i => i + 1,\n    tick: {\n      fill: theme.palette.text.hint + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.hint + \"80\",\n    tickLine: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399\n    },\n    __self: this\n  }), React.createElement(Area, {\n    type: \"natural\",\n    dataKey: \"desktop\",\n    fill: theme.palette.background.light,\n    strokeWidth: 0,\n    activeDot: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405\n    },\n    __self: this\n  }), React.createElement(Line, {\n    type: \"natural\",\n    dataKey: \"mobile\",\n    stroke: theme.palette.primary.main,\n    strokeWidth: 2,\n    dot: false,\n    activeDot: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412\n    },\n    __self: this\n  }), React.createElement(Line, {\n    type: \"linear\",\n    dataKey: \"tablet\",\n    stroke: theme.palette.warning.main,\n    strokeWidth: 2,\n    dot: {\n      stroke: theme.palette.warning.dark,\n      strokeWidth: 2,\n      fill: theme.palette.warning.main\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420\n    },\n    __self: this\n  }))))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    title: \"Dados em tabela\",\n    upperTitle: true,\n    noBodyPadding: true,\n    bodyClass: classes.tableWidget,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436\n    },\n    __self: this\n  }, React.createElement(Table, {\n    data: mock.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442\n    },\n    __self: this\n  })))));\n} // #######################################################################\n\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (randomValue <= min || randomValue >= max || lastValue && randomValue - lastValue > maxDiff) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n    return {\n      value: randomValue\n    };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n\n  for (let i = 0; i < tablet.length; i++) {\n    resultArray.push({\n      tablet: tablet[i].value,\n      desktop: desktop[i].value,\n      mobile: mobile[i].value\n    });\n  }\n\n  return resultArray;\n}","map":{"version":3,"sources":["/Users/luisfernandolins/ChernoStation/client/src/pages/dashboard/Dashboard.js"],"names":["React","useState","Grid","LinearProgress","Select","OutlinedInput","MenuItem","TextField","InputLabel","FormHelperText","FormControl","useTheme","ResponsiveContainer","ComposedChart","AreaChart","LineChart","Line","Area","PieChart","Pie","Cell","YAxis","XAxis","useStyles","mock","Widget","PageTitle","Typography","Dot","Table","BigStat","mainChartData","getMainChartData","PieChartData","name","value","color","Dashboard","props","classes","theme","mainChartState","setMainChartState","age","values","setValues","inputLabel","useRef","labelWidth","setLabelWidth","handleChange","event","oldValues","target","bigStat","map","stat","product","mainFormBody","mainFormItem","formControl","id","textField","shrink","mainChartBody","mainChartHeader","mainChartHeaderLabels","mainChartHeaderLabel","mainChartLegentElement","e","notchedOutline","mainChartSelectRoot","input","mainChartSelect","top","right","left","bottom","fill","palette","text","hint","fontSize","i","background","light","primary","main","warning","stroke","dark","strokeWidth","tableWidget","table","getRandomData","length","min","max","multiplier","maxDiff","array","Array","lastValue","item","index","randomValue","Math","floor","random","resultArray","tablet","desktop","mobile","push"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Grid,\n  LinearProgress,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  TextField,\n  InputLabel,\n  FormHelperText,\n  FormControl,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  AreaChart,\n  LineChart,\n  Line,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n  YAxis,\n  XAxis,\n} from \"recharts\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget\";\nimport PageTitle from \"../../components/PageTitle\";\nimport { Typography } from \"../../components/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\n\nconst mainChartData = getMainChartData();\nconst PieChartData = [\n  { name: \"Group A\", value: 400, color: \"primary\" },\n  { name: \"Group B\", value: 300, color: \"secondary\" },\n  { name: \"Group C\", value: 300, color: \"warning\" },\n  { name: \"Group D\", value: 200, color: \"success\" },\n];\n\nexport default function Dashboard(props) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // local\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\n\n // form props\n  const [values, setValues] = React.useState({\n    age: '',\n    name: 'hai',\n  });\n\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  // React.useEffect(() => {\n  //   setLabelWidth(inputLabel.current.offsetWidth);\n  // }, []);\n\n  const handleChange = event => {\n    setValues(oldValues => ({\n      ...oldValues,\n      [event.target.name]: event.target.value,\n    }));\n  };\n  //\n\n  return (\n    <>\n      <PageTitle title=\"Dashboard\" button=\"Latest Reports\" />\n      <Grid container spacing={4}>\n        {/* <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"App Performance\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.performanceLegendWrapper}>\n              <div className={classes.legendElement}>\n                <Dot color=\"warning\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  Integration\n                </Typography>\n              </div>\n              <div className={classes.legendElement}>\n                <Dot color=\"primary\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  SDK\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.progressSection}>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                Integration\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={30}\n                classes={{ barColorPrimary: classes.progressBar }}\n                className={classes.progress}\n              />\n            </div>\n            <div>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                SDK\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={55}\n                classes={{ barColorPrimary: classes.progressBar }}\n                className={classes.progress}\n              />\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"Server Overview\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n              >\n                60% / 37°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.secondary.main}\n                      fill={theme.palette.secondary.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n              >\n                54% / 31°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.primary.main}\n                      fill={theme.palette.primary.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n              >\n                57% / 21°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.warning.main}\n                      fill={theme.palette.warning.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget title=\"Revenue Breakdown\" upperTitle className={classes.card}>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <ResponsiveContainer width=\"100%\" height={144}>\n                  <PieChart margin={{ left: theme.spacing(2) }}>\n                    <Pie\n                      data={PieChartData}\n                      innerRadius={45}\n                      outerRadius={60}\n                      dataKey=\"value\"\n                    >\n                      {PieChartData.map((entry, index) => (\n                        <Cell\n                          key={`cell-${index}`}\n                          fill={theme.palette[entry.color].main}\n                        />\n                      ))}\n                    </Pie>\n                  </PieChart>\n                </ResponsiveContainer>\n              </Grid>\n              <Grid item xs={6}>\n                <div className={classes.pieChartLegendWrapper}>\n                  {PieChartData.map(({ name, value, color }, index) => (\n                    <div key={color} className={classes.legendItemContainer}>\n                      <Dot color={color} />\n                      <Typography style={{ whiteSpace: \"nowrap\" }}>\n                        &nbsp;{name}&nbsp;\n                      </Typography>\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\n                        &nbsp;{value}\n                      </Typography>\n                    </div>\n                  ))}\n                </div>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid> */}\n        {mock.bigStat.map(stat => (\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\n            <BigStat {...stat} />\n          </Grid>\n        ))}\n        {/* Form */}\n        <Grid item xs={12}>\n        <Widget>\n            <form method=\"GET\" action=\"controller\" >\n            <input type=\"hidden\"\n                   name=\"nomeDoTratadorDePagina\"\n                   value=\"mvc.pagehandlers.Tratador_pagina2_jsp\" />\n            <input type=\"hidden\"\n                   name=\"form\"\n                   value=\"form1\" />\n            <table>\n                <tr className={classes.mainFormBody}>\n                    <td className={classes.mainFormItem}>\n                    <FormControl className={classes.formControl}>\n                      <InputLabel htmlFor=\"age-auto-width\">Age</InputLabel>\n                      <Select\n                        value={values.age}\n                        onChange={handleChange}\n                        inputProps={{\n                          name: 'age',\n                          id: 'age-auto-width',\n                        }}\n                        autoWidth\n                      >\n                        <MenuItem value=\"\">\n                          <em>None</em>\n                        </MenuItem>\n                        <MenuItem value={10}>Ten</MenuItem>\n                        <MenuItem value={20}>Twenty</MenuItem>\n                        <MenuItem value={30}>Thirty</MenuItem>\n                      </Select>\n                      <FormHelperText>Auto width</FormHelperText>\n                    </FormControl>\n                    </td>\n            <td id=\"datafinal\" className={classes.mainFormItem}> \n            <TextField\n              id=\"date\"\n              label=\"Data final a ser exibida\"\n              type=\"date\"\n              defaultValue=\"2017-05-24\"\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />  \n            </td>\n            <td className={classes.mainFormItem}>\n            Período:\n            <select name=\"periodo\">\n                <option value=\"year\">Ano</option>\n                <option value=\"month\">Mês</option>\n                <option value=\"week\">Semana</option>\n                <option value=\"day\">Dia</option>\n            </select>\n            </td>\n            \n            <td className={classes.mainFormItem}>\n            <input type=\"Radio\" name=\"datatype\" value=\"table\" checked />Tabela\n            <input type=\"Radio\" name=\"datatype\" value=\"graphics\" />Gráfico\n            </td>\n            \n                </tr>\n            </table>\n            <br />\n            <input type=\"button\" value=\"EXIBIR\" onclick=\"fazerPedidoAJAXMedidas(datetime,medidor,periodo)\" />\n            <input type=\"button\" value=\"EDITAR MEDIDORES\" onclick=\"fazerPedidoAJAXMedidores()\" />\n          </form>\n          </Widget>\n        </Grid>\n        {/* Form */}\n        <Grid item xs={12}>\n          <Widget\n            bodyClass={classes.mainChartBody}\n            header={\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  Gráfico\n                </Typography>\n                <div className={classes.mainChartHeaderLabels}>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"warning\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Tablet\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Mobile\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Desktop\n                    </Typography>\n                  </div>\n                </div>\n                <Select\n                  value={mainChartState}\n                  onChange={e => setMainChartState(e.target.value)}\n                  input={\n                    <OutlinedInput\n                      labelWidth={0}\n                      classes={{\n                        notchedOutline: classes.mainChartSelectRoot,\n                        input: classes.mainChartSelect,\n                      }}\n                    />\n                  }\n                  autoWidth\n                >\n                  <MenuItem value=\"daily\">Daily</MenuItem>\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\n                </Select>\n              </div>\n            }\n          >\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n              <ComposedChart\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n                data={mainChartData}\n              >\n                <YAxis\n                  ticks={[0, 2500, 5000, 7500]}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <XAxis\n                  tickFormatter={i => i + 1}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <Area\n                  type=\"natural\"\n                  dataKey=\"desktop\"\n                  fill={theme.palette.background.light}\n                  strokeWidth={0}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"natural\"\n                  dataKey=\"mobile\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={false}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"linear\"\n                  dataKey=\"tablet\"\n                  stroke={theme.palette.warning.main}\n                  strokeWidth={2}\n                  dot={{\n                    stroke: theme.palette.warning.dark,\n                    strokeWidth: 2,\n                    fill: theme.palette.warning.main,\n                  }}\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </Widget>\n        </Grid>\n        <Grid item xs={12}>\n          <Widget\n            title=\"Dados em tabela\"\n            upperTitle\n            noBodyPadding\n            bodyClass={classes.tableWidget}\n          >\n            <Table data={mock.table} />\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n// #######################################################################\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (\n      randomValue <= min ||\n      randomValue >= max ||\n      (lastValue && randomValue - lastValue > maxDiff)\n    ) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n\n    return { value: randomValue };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n\n  for (let i = 0; i < tablet.length; i++) {\n    resultArray.push({\n      tablet: tablet[i].value,\n      desktop: desktop[i].value,\n      mobile: mobile[i].value,\n    });\n  }\n\n  return resultArray;\n}\n"]},"metadata":{},"sourceType":"module"}