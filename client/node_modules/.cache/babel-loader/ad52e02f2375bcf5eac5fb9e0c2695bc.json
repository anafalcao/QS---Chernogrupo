{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\User\\\\QS-ChernoStation\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:\\\\Users\\\\User\\\\QS-ChernoStation\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\QS-ChernoStation\\\\client\\\\src\\\\context\\\\UserContext.js\";\nimport React from \"react\";\nimport Queries from \"../../src/queries\";\nimport { client } from '../index';\nimport { gql } from \"apollo-boost\";\nvar UserStateContext = React.createContext();\nvar UserDispatchContext = React.createContext();\n\nfunction userReducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      return _objectSpread({}, state, {\n        isAuthenticated: true\n      });\n\n    case \"LOGIN_FAILURE\":\n      return _objectSpread({}, state, {\n        isAuthenticated: false\n      });\n\n    case \"SIGN_OUT_SUCCESS\":\n      return _objectSpread({}, state, {\n        isAuthenticated: false\n      });\n\n    default:\n      {\n        throw new Error(\"Unhandled action type: \".concat(action.type));\n      }\n  }\n}\n\nfunction UserProvider({\n  children\n}) {\n  var _React$useReducer = React.useReducer(userReducer, {\n    isAuthenticated: !!localStorage.getItem(\"id_token\")\n  }),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  return React.createElement(UserStateContext.Provider, {\n    value: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(UserDispatchContext.Provider, {\n    value: dispatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, children));\n}\n\nfunction useUserState() {\n  var context = React.useContext(UserStateContext);\n\n  if (context === undefined) {\n    throw new Error(\"useUserState must be used within a UserProvider\");\n  }\n\n  return context;\n}\n\nfunction useUserDispatch() {\n  var context = React.useContext(UserDispatchContext);\n\n  if (context === undefined) {\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\n  }\n\n  return context;\n}\n\nexport { UserProvider, useUserState, useUserDispatch, loginUser, signOut }; // ###########################################################\n\nfunction hasValueDeep(json, findValue) {\n  const values = Object.values(json);\n  const object = null;\n  let hasValue = values.includes(findValue);\n  values.forEach(function (value) {\n    if (typeof value === \"object\") {\n      hasValue = hasValue || hasValueDeep(value, findValue);\n    }\n  });\n  return hasValue;\n}\n\nasync function loginUser(dispatch, login, password, history, setIsLoading, setError) {\n  // let users = null;\n  // Queries.getUsers().then(result => {users = result;});\n  const users = await Queries.getUsers();\n  const userList = users.data.allUsers.nodes;\n  setIsLoading(true);\n\n  if (!!login && !!password) {\n    let loggedUser = userList.filter(user => user.email === login);\n    console.log(loggedUser);\n\n    if (loggedUser[0] && loggedUser[0].passwordHash === password) {\n      setTimeout(() => {\n        localStorage.setItem(\"id_token\", loggedUser[0].id);\n        dispatch({\n          type: \"LOGIN_SUCCESS\"\n        });\n        setError(null);\n        history.push(\"/app/dashboard\");\n      }, 2000);\n      return;\n    } else {\n      setIsLoading(false);\n      setTimeout(() => {\n        dispatch({\n          type: \"LOGIN_FAILURE\"\n        });\n        setError(true);\n        history.push(\"/login\");\n      }, 2000);\n    }\n  } else {\n    dispatch({\n      type: \"LOGIN_FAILURE\"\n    });\n    setError(true);\n    setIsLoading(false);\n  }\n\n  setError(true);\n}\n\nfunction signOut(dispatch, history) {\n  localStorage.removeItem(\"id_token\");\n  dispatch({\n    type: \"SIGN_OUT_SUCCESS\"\n  });\n  history.push(\"/login\");\n}","map":{"version":3,"sources":["C:\\Users\\User\\QS-ChernoStation\\client\\src\\context\\UserContext.js"],"names":["React","Queries","client","gql","UserStateContext","createContext","UserDispatchContext","userReducer","state","action","type","isAuthenticated","Error","UserProvider","children","useReducer","localStorage","getItem","dispatch","useUserState","context","useContext","undefined","useUserDispatch","loginUser","signOut","hasValueDeep","json","findValue","values","Object","object","hasValue","includes","forEach","value","login","password","history","setIsLoading","setError","users","getUsers","userList","data","allUsers","nodes","loggedUser","filter","user","email","console","log","passwordHash","setTimeout","setItem","id","push","removeItem"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Queries from \"../../src/queries\";\r\nimport { client } from '../index';\r\nimport { gql } from \"apollo-boost\";\r\n\r\nvar UserStateContext = React.createContext();\r\nvar UserDispatchContext = React.createContext();\r\n\r\nfunction userReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN_SUCCESS\":\r\n      return { ...state, isAuthenticated: true };\r\n    case \"LOGIN_FAILURE\":\r\n      return { ...state, isAuthenticated: false };\r\n    case \"SIGN_OUT_SUCCESS\":\r\n      return { ...state, isAuthenticated: false };\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction UserProvider({ children }) {\r\n  var [state, dispatch] = React.useReducer(userReducer, {\r\n    isAuthenticated: !!localStorage.getItem(\"id_token\"),\r\n  });\r\n\r\n  return (\r\n    <UserStateContext.Provider value={state}>\r\n      <UserDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </UserDispatchContext.Provider>\r\n    </UserStateContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useUserState() {\r\n  var context = React.useContext(UserStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserState must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction useUserDispatch() {\r\n  var context = React.useContext(UserDispatchContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nexport { UserProvider, useUserState, useUserDispatch, loginUser, signOut };\r\n\r\n// ###########################################################\r\n\r\nfunction hasValueDeep(json, findValue) {\r\n  const values = Object.values(json);\r\n  const object = null;\r\n  let hasValue = values.includes(findValue);\r\n  values.forEach(function(value) {\r\n      if (typeof value === \"object\") {\r\n          hasValue = hasValue || hasValueDeep(value, findValue);\r\n      }\r\n  })\r\n  return hasValue;\r\n}\r\n\r\nasync function loginUser(dispatch, login, password, history, setIsLoading, setError) {\r\n  // let users = null;\r\n  // Queries.getUsers().then(result => {users = result;});\r\n  const users = await Queries.getUsers();\r\n  const userList = users.data.allUsers.nodes;\r\n  setIsLoading(true);\r\n\r\n  if (!!login && !!password) {\r\n    let loggedUser = userList.filter(user => user.email === login);\r\n    console.log(loggedUser);\r\n    if (loggedUser[0] && loggedUser[0].passwordHash === password) {\r\n      setTimeout(() => {\r\n        localStorage.setItem(\"id_token\", loggedUser[0].id);\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n        setError(null);\r\n        \r\n        history.push(\"/app/dashboard\");\r\n      }, 2000);\r\n      return;\r\n\r\n    } else {\r\n      setIsLoading(false);\r\n      setTimeout(() => {\r\n        dispatch({ type: \"LOGIN_FAILURE\" });\r\n        setError(true);\r\n        \r\n        history.push(\"/login\");\r\n      }, 2000);\r\n    }\r\n  } else {\r\n    dispatch({ type: \"LOGIN_FAILURE\" });\r\n    setError(true);\r\n    setIsLoading(false);\r\n  }\r\n  setError(true);\r\n}\r\n\r\nfunction signOut(dispatch, history) {\r\n  localStorage.removeItem(\"id_token\");\r\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\r\n  history.push(\"/login\");\r\n}\r\n"]},"metadata":{},"sourceType":"module"}