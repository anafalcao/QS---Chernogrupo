{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/luisfernandolins/ChernoStation/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n            {\\n                allMeasurementTypes {\\n                edges {\\n                    node {\\n                    id\\n                    name\\n                    rulesByMeasurementTypeId {\\n                        nodes {\\n                        description\\n                        alertLevel\\n                        id\\n                        maxValue\\n                        }\\n                    }\\n                    }\\n                }\\n                }\\n            }\\n            \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport { client } from './index';\nimport { gql } from \"apollo-boost\"; // or you can use `import gql from 'graphql-tag';` instead\n\nexport default class Queries {\n  getRulesByMeasurement() {\n    client.query({\n      query: gql(_templateObject())\n    }).then(result => console.log(result));\n  }\n\n}","map":{"version":3,"sources":["/Users/luisfernandolins/ChernoStation/client/src/queries.js"],"names":["client","gql","Queries","getRulesByMeasurement","query","then","result","console","log"],"mappings":";;;;;;;;;;;;AAAA,SAASA,MAAT,QAAuB,SAAvB;AACA,SAASC,GAAT,QAAoB,cAApB,C,CACA;;AAEA,eAAe,MAAMC,OAAN,CAAc;AACzBC,EAAAA,qBAAqB,GAAG;AACpBH,IAAAA,MAAM,CACLI,KADD,CACO;AACHA,MAAAA,KAAK,EAAEH,GAAF;AADF,KADP,EAuBCI,IAvBD,CAuBMC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAvBhB;AAwBH;;AA1BwB","sourcesContent":["import { client } from './index';\nimport { gql } from \"apollo-boost\";\n// or you can use `import gql from 'graphql-tag';` instead\n\nexport default class Queries {\n    getRulesByMeasurement() {\n        client\n        .query({\n            query: gql`\n            {\n                allMeasurementTypes {\n                edges {\n                    node {\n                    id\n                    name\n                    rulesByMeasurementTypeId {\n                        nodes {\n                        description\n                        alertLevel\n                        id\n                        maxValue\n                        }\n                    }\n                    }\n                }\n                }\n            }\n            `\n        })\n        .then(result => console.log(result));\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}